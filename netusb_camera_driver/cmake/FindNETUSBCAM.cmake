function(download_netusbcam NETUSBCAM_LIB_VAR NETUSBCAM_INCLUDE_DIR_VAR)
  if(NOT UNIX)
    message(FATAL_ERROR "Downloading NETUSBCAM Library for non-linux system is currently not supported.")
  endif()

  set(NETUSBCAM_LIB "${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_LIB_DESTINATION}/libNETUSBCAM.so")
  set(NETUSBCAM_INCLUDE_DIR "${CATKIN_DEVEL_PREFIX}/${CATKIN_GLOBAL_INCLUDE_DESTINATION}")
  set(NETUSBCAM_DOWNLOAD_SCRIPT "${PROJECT_SOURCE_DIR}/cmake/download_netusbcam.py")
  execute_process(
    COMMAND ${NETUSBCAM_DOWNLOAD_SCRIPT} ${NETUSBCAM_LIB} ${NETUSBCAM_INCLUDE_DIR}
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

  set(${NETUSBCAM_LIB_VAR} ${NETUSBCAM_LIB} PARENT_SCOPE)
  set(${NETUSBCAM_INCLUDE_DIR_VAR} ${NETUSBCAM_INCLUDE_DIR} PARENT_SCOPE)
endfunction()

set(NETUSBCAM_ROOT_DIR
  "${NETUSBCAM_ROOT_DIR}"
  CACHE PATH
  "Directory to search for NETUSBCAM")

find_library(NETUSBCAM_LIBRARY
  NAMES NETUSBCAM
  PATHS "${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_LIB_DESTINATION}" /usr/lib
  HINTS "${NETUSBCAM_ROOT_DIR}"
  PATH_SUFFIXES lib)

get_filename_component(_libdir "${NETUSBCAM_LIBRARY}" PATH)

find_path(NETUSBCAM_INCLUDE_DIR
  NAMES NETUSBCAM_API.h
  PATHS "${CATKIN_DEVEL_PREFIX}/${CATKIN_GLOBAL_INCLUDE_DESTINATION}" /usr/include
  HINTS "${_libdir}" "${_libdir}/.." "${NETUSBCAM_ROOT_DIR}"
  PATH_SUFFIXES include)

if(NOT NETUSBCAM_LIBRARY)
  message(STATUS "NETUSBCAM Library Not Found in System Library Path")
  download_netusbcam(NETUSBCAM_LIBRARY NETUSBCAM_INCLUDE_DIR)
else()
  set(NETUSBCAM_INCLUDE_DIR "${CATKIN_DEVEL_PREFIX}/${CATKIN_GLOBAL_INCLUDE_DESTINATION}")
endif()

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(NETUSBCAM
  DEFAULT_MSG NETUSBCAM_LIBRARY NETUSBCAM_INCLUDE_DIR)

if(NETUSBCAM_FOUND)
  list(APPEND NETUSBCAM_LIBRARIES ${NETUSBCAM_LIBRARY})
  list(APPEND NETUSBCAM_INCLUDE_DIRS ${NETUSBCAM_INCLUDE_DIR})
  mark_as_advanced(NETUSBCAM_ROOT_DIR)
endif()
mark_as_advanced(NETUSBCAM_INCLUDE_DIR NETUSBCAM_LIBRARY)
